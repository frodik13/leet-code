namespace LeetCode.DynamicProgramming;

public class DominoTrominoTiling
{
    // У вас есть два типа плиток: форма домино 2 x 1 и форма тримино(г-образное домино).
    // Вы можете вращать эти фигуры. Дано целое число n, верните количество способов замостить доску 2 x n.
    // Поскольку ответ может быть очень большим, верните его по модулю 10⁹ + 7.
    // В плитке каждый квадрат должен быть покрыт плиткой. Две плитки различны тогда и только тогда,
    // когда на доске есть две смежные в 4 направлениях клетки, такие,
    // что ровно в одной из плиток оба квадрата заняты плиткой.

    private const int MOD = 1_000_000_007;

    public int NumTilings(int n)
    {
        if (n == 0) return 1;
        if (n == 1) return 1;
        if (n == 2) return 2;

        var dp = new int[n + 1];
        dp[0] = 1; // пустая доска
        dp[1] = 1; // одна вертикальная домино
        dp[2] = 2; // две вертикальные или горизонтальные домино

        for (var i = 3; i <= n; i++)
            dp[i] = (int)((2L * dp[i - 1] + dp[i - 3]) % MOD);
        
        // 2L * dp[i - 1] — это все возможные расширения доски длины i - 1 на 1 колонку
        // двумя способами (домино + тромино),
        // dp[i - 3] — отражает случаи, когда используется тромино, охватывающее 3 колонки.
        
        return dp[n];
    }
}